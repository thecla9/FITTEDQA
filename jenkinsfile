import groovy.json.JsonOutput

def COLOR_MAP = [
'SUCCESS': 'good',
'FAILURE' : 'danger',
]

def getBuildUser(){
return currentBuild.rawBuild.getCause(Cause.UseridCause).getUserid()
}
pipeline{
    agent any

    parameters{
          string(name: "SPEC", defaultValue: "cypress/integration/**/**", description: "Tailor account":"cypress/integration/POM/.spec.js""
choice(name: "BROWSER", choices: ["chrome", "firefox", "edge"], description: "Different browsers")
    }
options 

ansiColor('Xterm')
{

        stage('Build') {
            steps {
                echo "Build Application"
            }
        }
        stage('Testing') {
            steps {
                bat 'npm i'    
                bat npx cypress run --browser ${BROWSER} --spec ${}SPEC}
                        }
        }
        stage('Deploy') {
            steps {
               'echo 'Deployong the application'
        }
        }
        }
        
        post {
             always{
            script{
BUILD_USER = getBuildUser()
}
slackSend channel: '#fitted-git-dev-qa'
color: COLOR_MAP[currentBuild.currentResult], 
message: "'${currentBuild.currentResult}:' ${env.JOB_NAME} build ${env.BUILD_NUMBER} BY ${BUILD_USER} \n Tests: ${SPEC} executed ${BROWSER} \n More information at: ${env.BUILD_URL}HTML_20Report/"

always {publishHTML(allowMissing:false, alwayslinktoLastBuild:false, keepAll:true, reportDir : 'cypress/report', reportfiles : 'index.html' 


            }
        }
    }
}